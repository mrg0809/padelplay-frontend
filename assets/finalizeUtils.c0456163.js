import{e as M}from"./hourUtils.24f4f451.js";const z=async(p,r,f,e)=>{var s,l;console.log("Finalizando reserva de clase privada..."),console.log("context:",r);const{baseData:n,extraData:m,selectedProducts:i,paymentOrderId:c,amountToPay:u,paymentOption:g}=r,{itemDetails:o}=r;try{const a={payment_order_id:c,payment_method:p.payment_method,payment_status:p.status,transaction_id:p.id,is_full_payment:g==="total"},t=await f.post("/payments/process-stripe-payment",a);if(!t.data||!t.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(b=>setTimeout(b,500));let y=null,d=null,h=60;const E=o.find(b=>b.label==="Fecha");E&&(y=E.value);const P=o.find(b=>b.label==="Horario");P&&(d=P.value.split(" ")[0]);const v=o.find(b=>b.label==="Duraci\xF3n");if(v){const b=v.value.match(/\d+/);b&&(h=parseInt(b[0],10))}if(!y||!d)throw new Error("Falta la fecha o la hora de la clase.");const _={club_id:n.clubId,coach_id:n.id,lesson_date:y,lesson_time:d,duration:h,price_paid:u,participants:n.participants,payment_order_id:c,payment_intent_id:p.id,additional_items:i,pay_total:g==="total"};console.log("Payload para /lessons/private-booking:",_);const w=await f.post("/lessons/private-booking",_);if(w.data&&w.data.booking_id)return console.log("Reserva de clase privada creada:",w.data),{success:!0,path:`/player/privatelesson/${w.data.booking_id}`};throw console.error("Error: No se recibi\xF3 booking_id en la respuesta:",w),new Error("No se pudo confirmar la reserva de la clase privada.")}catch(a){return console.error("Error en finalizeClassBooking:",a),e.notify({type:"negative",message:((l=(s=a.response)==null?void 0:s.data)==null?void 0:l.detail)||a.message||"Error al confirmar la reserva de clase."}),{success:!1}}},I=async(p,r,f,e)=>{var s,l;console.log("Finalizando reserva de clase privada con MercadoPago..."),console.log("context:",r);const{baseData:n,extraData:m,selectedProducts:i,paymentOrderId:c,amountToPay:u,paymentOption:g}=r,{itemDetails:o}=r;try{await new Promise(_=>setTimeout(_,1e3));let a=null,t=null,y=60;const d=o.find(_=>_.label==="Fecha");d&&(a=d.value);const h=o.find(_=>_.label==="Horario");h&&(t=h.value.split(" ")[0]);const E=o.find(_=>_.label==="Duraci\xF3n");if(E){const _=E.value.match(/\d+/);_&&(y=parseInt(_[0],10))}if(!a||!t)throw new Error("Falta la fecha o la hora de la clase.");const P={club_id:n.clubId,coach_id:n.id,lesson_date:a,lesson_time:t,duration:y,price_paid:u,participants:n.participants,payment_order_id:c,payment_intent_id:p.payment_id,additional_items:i,pay_total:g==="total"};console.log("Payload para /lessons/private-booking:",P);const v=await f.post("/lessons/private-booking",P);if(v.data&&v.data.booking_id)return console.log("Reserva de clase privada creada:",v.data),{success:!0,path:`/player/privatelesson/${v.data.booking_id}`};throw console.error("Error: No se recibi\xF3 booking_id en la respuesta:",v),new Error("No se pudo confirmar la reserva de la clase privada.")}catch(a){return console.error("Error en finalizeMercadoPagoClassBooking:",a),e.notify({type:"negative",message:((l=(s=a.response)==null?void 0:s.data)==null?void 0:l.detail)||a.message||"Error al confirmar la reserva de clase."}),{success:!1}}},F=async(p,r,f,e)=>{var i,c,u,g;console.log("Finalizando inscripci\xF3n a clase p\xFAblica..."),console.log("context:",r);const{baseData:n,paymentOrderId:m}=r;try{if(!m)return console.error("Falta el paymentOrderId para la inscripci\xF3n a la clase p\xFAblica."),e&&e.notify({type:"negative",message:"Error interno: Falta el ID de la orden de pago."}),{success:!1};const o={payment_order_id:m,payment_method:p.payment_method,payment_status:p.status,transaction_id:p.id,is_full_payment:!0},s=await f.post("/payments/process-stripe-payment",o);if(!s.data||!s.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(a=>setTimeout(a,500));const l=await f.post(`/lessons/public-booking/${n.id}`);if(l.data&&l.data.message==="Inscripci\xF3n exitosa.")return console.log("Inscripci\xF3n a clase p\xFAblica exitosa:",l.data),e&&e.notify({type:"positive",message:"Te has inscrito a la clase con \xE9xito."}),{success:!0};{console.error("Error al inscribirse a la clase p\xFAblica:",l);const a=((i=l.data)==null?void 0:i.detail)||((c=l.data)==null?void 0:c.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:a}),{success:!1}}}catch(o){console.error("Error en finalizePublicLessonBooking:",o);const s=((g=(u=o.response)==null?void 0:u.data)==null?void 0:g.detail)||o.message||"Error al inscribirse a la clase.";return e&&e.notify({type:"negative",message:s}),{success:!1}}},k=async(p,r,f,e)=>{var g,o,s,l;console.log("Finalizando uni\xF3n a partido abierto..."),console.log("context:",r);const{paymentOrderId:n,extraData:m}=r,{matchId:i,slotIndex:c,teamToJoin:u}=m||{};try{if(!n||!m||i===void 0||c===void 0||u===void 0)return console.error("Faltan datos para la uni\xF3n al partido abierto."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para unirse al partido."}),{success:!1};const a={payment_order_id:n,payment_method:p.payment_method,payment_status:p.status,transaction_id:p.id,is_full_payment:!0},t=await f.post("/payments/process-stripe-payment",a);if(!t.data||!t.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(h=>setTimeout(h,500));const y={match_id:i,slot_index:c,team_to_join:u},d=await f.post("/matches/join",y);if(d.data&&d.data.message==="Te has unido al partido exitosamente.")return console.log("Uni\xF3n a partido abierto exitosa:",d.data),e&&e.notify({type:"positive",message:"Te has unido al partido con \xE9xito."}),{success:!0,matchId:i};{console.error("Error al unirse al partido abierto:",d);const h=((g=d.data)==null?void 0:g.detail)||((o=d.data)==null?void 0:o.message)||"No se pudo completar la uni\xF3n al partido.";return e&&e.notify({type:"negative",message:h}),{success:!1}}}catch(a){console.error("Error en finalizeMatchJoin:",a);const t=((l=(s=a.response)==null?void 0:s.data)==null?void 0:l.detail)||a.message||"Error al unirse al partido.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},R=async(p,r,f,e)=>{var u,g,o,s,l;console.log("Finalizando inscripci\xF3n a torneo..."),console.log("context:",r);const{paymentOrderId:n,baseData:m,extraData:i}=r,{id:c}=m||{};try{if(!n||!c)return console.error("Faltan datos para la inscripci\xF3n al torneo."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para inscribirse al torneo."}),{success:!1};const a={payment_order_id:n,payment_method:p.payment_method,payment_status:p.status,transaction_id:p.id,is_full_payment:!0},t=await f.post("/payments/process-stripe-payment",a);if(!t.data||!t.data.message)throw new Error("Error al actualizar el estado del pago.");console.log("Pago procesado exitosamente. La inscripci\xF3n al torneo fue completada autom\xE1ticamente.");const d=i&&i.isRetas?"Te has inscrito a las retas con \xE9xito.":"Te has inscrito al torneo con \xE9xito.";return e&&e.notify({type:"positive",message:d}),{success:!0}}catch(a){console.error("Error en finalizeTournamentEnrollment:",a),console.error("Error details:",{status:(u=a.response)==null?void 0:u.status,statusText:(g=a.response)==null?void 0:g.statusText,data:(o=a.response)==null?void 0:o.data,message:a.message,stack:a.stack}),console.log("API Base URL:",f.defaults.baseURL);const t=((l=(s=a.response)==null?void 0:s.data)==null?void 0:l.detail)||a.message||"Error al inscribirse al torneo.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},O=async(p,r,f,e)=>{var u,g,o,s,l;console.log("Finalizando inscripci\xF3n a torneo con MercadoPago..."),console.log("context:",r);const{paymentOrderId:n,baseData:m,extraData:i}=r,{id:c}=m||{};try{if(!n||!c)return console.error("Faltan datos para la inscripci\xF3n al torneo."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para inscribirse al torneo."}),{success:!1};console.log("Calling process-mercadopago-payment endpoint...");const a={payment_order_id:n,payment_method:"mercadopago",payment_status:"approved",transaction_id:p.payment_id||p.id||"mercadopago_"+Date.now(),is_full_payment:!0};try{const d=await f.post("/payments/process-mercadopago-payment",a);console.log("Payment processing response:",d.data)}catch(d){console.error("Error processing MercadoPago payment:",d)}console.log("Pago procesado exitosamente. La inscripci\xF3n al torneo fue completada autom\xE1ticamente.");const y=i&&i.isRetas?"Te has inscrito a las retas con \xE9xito.":"Te has inscrito al torneo con \xE9xito.";return e&&e.notify({type:"positive",message:y}),{success:!0}}catch(a){console.error("Error en finalizeMercadoPagoTournamentEnrollment:",a),console.error("Error details:",{status:(u=a.response)==null?void 0:u.status,statusText:(g=a.response)==null?void 0:g.statusText,data:(o=a.response)==null?void 0:o.data,message:a.message,stack:a.stack}),console.log("API Base URL:",f.defaults.baseURL);const t=((l=(s=a.response)==null?void 0:s.data)==null?void 0:l.detail)||a.message||"Error al inscribirse al torneo.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},B=async(p,r,f,e)=>{var i,c,u,g;console.log("Finalizando inscripci\xF3n a clase p\xFAblica con MercadoPago..."),console.log("context:",r);const{baseData:n,paymentOrderId:m}=r;try{if(!m)return console.error("Falta el paymentOrderId para la inscripci\xF3n a la clase p\xFAblica."),e&&e.notify({type:"negative",message:"Error interno: Falta el ID de la orden de pago."}),{success:!1};await new Promise(s=>setTimeout(s,1e3));const o=await f.post(`/lessons/public-booking/${n.id}`);if(o.data&&o.data.message==="Inscripci\xF3n exitosa.")return console.log("Inscripci\xF3n a clase p\xFAblica exitosa:",o.data),e&&e.notify({type:"positive",message:"Te has inscrito a la clase con \xE9xito."}),{success:!0};{console.error("Error al inscribirse a la clase p\xFAblica:",o);const s=((i=o.data)==null?void 0:i.detail)||((c=o.data)==null?void 0:c.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:s}),{success:!1}}}catch(o){console.error("Error en finalizeMercadoPagoPublicLessonBooking:",o);const s=((g=(u=o.response)==null?void 0:u.data)==null?void 0:g.detail)||o.message||"Error al inscribirse a la clase.";return e&&e.notify({type:"negative",message:s}),{success:!1}}},L=async(p,r,f,e)=>{var g,o,s,l;console.log("Finalizando uni\xF3n a partido abierto con MercadoPago..."),console.log("context:",r),console.log("paymentResult:",p);const{paymentOrderId:n,extraData:m}=r,{matchId:i,slotIndex:c,teamToJoin:u}=m||{};console.log("Extracted values:"),console.log("  paymentOrderId:",n),console.log("  extraData:",m),console.log("  matchId:",i),console.log("  slotIndex:",c),console.log("  teamToJoin:",u);try{if(!n||!m||i===void 0||c===void 0||u===void 0)return console.error("Faltan datos para la uni\xF3n al partido abierto."),console.error("Validation details:"),console.error("  paymentOrderId exists:",!!n),console.error("  extraData exists:",!!m),console.error("  matchId defined:",i!==void 0),console.error("  slotIndex defined:",c!==void 0),console.error("  teamToJoin defined:",u!==void 0),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para unirse al partido."}),{success:!1};await new Promise(y=>setTimeout(y,1e3));const a={match_id:i,slot_index:c,team_to_join:u},t=await f.post("/matches/join",a);if(t.data&&t.data.message==="Te has unido al partido exitosamente.")return console.log("Uni\xF3n a partido abierto exitosa:",t.data),e&&e.notify({type:"positive",message:"Te has unido al partido con \xE9xito."}),{success:!0,matchId:i};{console.error("Error al unirse al partido abierto:",t);const y=((g=t.data)==null?void 0:g.detail)||((o=t.data)==null?void 0:o.message)||"No se pudo completar la uni\xF3n al partido.";return e&&e.notify({type:"negative",message:y}),{success:!1}}}catch(a){console.error("Error en finalizeMercadoPagoMatchJoin:",a);const t=((l=(s=a.response)==null?void 0:s.data)==null?void 0:l.detail)||a.message||"Error al unirse al partido.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},N=async(p,r,f,e)=>{var s,l,a,t,y;console.log("Finalizando reserva de cancha con MercadoPago..."),console.log("context:",r);const{baseData:n,extraData:m,selectedProducts:i,paymentOrderId:c,totalAmount:u,amountToPay:g,itemDetails:o}=r;try{if(!n||!m||!c)return console.error("Faltan datos base/extra/paymentOrder para finalizar reserva con MercadoPago",r),e&&e.notify({type:"negative",message:"Error interno al finalizar la reserva (datos faltantes)."}),{success:!1};console.log("Waiting for backend payment status update..."),await new Promise(D=>setTimeout(D,3e3)),console.log("About to create reservation with payment_order_id:",c);const d=(i||[]).map(D=>({name:D.product.name,price:D.product.price,quantity:D.quantity})),h=m.date,E=m.time,P=m.duration;if(!h||!E)throw new Error("Falta la fecha o la hora de inicio en los datos extra/base.");const v=M(E,P),_=m.paymentOption==="total",w={club_id:n.clubId,court_id:n.id,reservation_date:h,start_time:E,end_time:v,total_price:u,pay_total:_,club_commission:0,player_commission:0,additional_items:d,payment_order_id:c,is_public_match:m.isPublicMatch||!1};console.log("Payload final para POST /reservations (MercadoPago):",w);const b=await f.post("/reservations/",w),x=(s=b.data)==null?void 0:s.match_id;if(!x)throw console.warn("API /reservations no devolvi\xF3 un match_id:",b.data),new Error("No se pudo confirmar la creaci\xF3n del partido asociado.");return console.log("Reserva de cancha confirmada en backend con MercadoPago. Match ID:",x),{success:!0,matchId:x}}catch(d){console.error("Error en finalizeMercadoPagoCourtReservation:",d);const h=((a=(l=d.response)==null?void 0:l.data)==null?void 0:a.detail)||((y=(t=d.response)==null?void 0:t.data)==null?void 0:y.message)||d.message||"Error al confirmar la reserva en nuestro sistema.";return e&&e.notify({type:"negative",message:`El pago se realiz\xF3, pero hubo un problema al guardar tu reserva: ${h}`}),{success:!1}}};export{F as a,R as b,k as c,N as d,I as e,z as f,B as g,L as h,O as i};
