import{e as M}from"./hourUtils.24f4f451.js";const I=async(u,n,f,e)=>{var t,d;console.log("Finalizando reserva de clase privada..."),console.log("context:",n);const{baseData:c,extraData:p,selectedProducts:i,paymentOrderId:l,amountToPay:m,paymentOption:g}=n,{itemDetails:s}=n;try{const a={payment_order_id:l,payment_method:u.payment_method,payment_status:u.status,transaction_id:u.id,is_full_payment:g==="total"},o=await f.post("/payments/process-stripe-payment",a);if(!o.data||!o.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(E=>setTimeout(E,500));let y=null,r=null,_=60;const h=s.find(E=>E.label==="Fecha");h&&(y=h.value);const w=s.find(E=>E.label==="Horario");w&&(r=w.value.split(" ")[0]);const v=s.find(E=>E.label==="Duraci\xF3n");if(v){const E=v.value.match(/\d+/);E&&(_=parseInt(E[0],10))}if(!y||!r)throw new Error("Falta la fecha o la hora de la clase.");const b={club_id:c.clubId,coach_id:c.id,lesson_date:y,lesson_time:r,duration:_,price_paid:m,participants:c.participants,payment_order_id:l,payment_intent_id:u.id,additional_items:i,pay_total:g==="total"};console.log("Payload para /lessons/private-booking:",b);const x=await f.post("/lessons/private-booking",b);if(x.data&&x.data.booking_id)return console.log("Reserva de clase privada creada:",x.data),{success:!0,path:`/player/privatelesson/${x.data.booking_id}`};throw console.error("Error: No se recibi\xF3 booking_id en la respuesta:",x),new Error("No se pudo confirmar la reserva de la clase privada.")}catch(a){return console.error("Error en finalizeClassBooking:",a),e.notify({type:"negative",message:((d=(t=a.response)==null?void 0:t.data)==null?void 0:d.detail)||a.message||"Error al confirmar la reserva de clase."}),{success:!1}}},z=async(u,n,f,e)=>{var t,d;console.log("Finalizando reserva de clase privada con MercadoPago..."),console.log("context:",n);const{baseData:c,extraData:p,selectedProducts:i,paymentOrderId:l,amountToPay:m,paymentOption:g}=n,{itemDetails:s}=n;try{await new Promise(b=>setTimeout(b,1e3));let a=null,o=null,y=60;const r=s.find(b=>b.label==="Fecha");r&&(a=r.value);const _=s.find(b=>b.label==="Horario");_&&(o=_.value.split(" ")[0]);const h=s.find(b=>b.label==="Duraci\xF3n");if(h){const b=h.value.match(/\d+/);b&&(y=parseInt(b[0],10))}if(!a||!o)throw new Error("Falta la fecha o la hora de la clase.");const w={club_id:c.clubId,coach_id:c.id,lesson_date:a,lesson_time:o,duration:y,price_paid:m,participants:c.participants,payment_order_id:l,payment_intent_id:u.payment_id,additional_items:i,pay_total:g==="total"};console.log("Payload para /lessons/private-booking:",w);const v=await f.post("/lessons/private-booking",w);if(v.data&&v.data.booking_id)return console.log("Reserva de clase privada creada:",v.data),{success:!0,path:`/player/privatelesson/${v.data.booking_id}`};throw console.error("Error: No se recibi\xF3 booking_id en la respuesta:",v),new Error("No se pudo confirmar la reserva de la clase privada.")}catch(a){return console.error("Error en finalizeMercadoPagoClassBooking:",a),e.notify({type:"negative",message:((d=(t=a.response)==null?void 0:t.data)==null?void 0:d.detail)||a.message||"Error al confirmar la reserva de clase."}),{success:!1}}},F=async(u,n,f,e)=>{var i,l,m,g;console.log("Finalizando inscripci\xF3n a clase p\xFAblica..."),console.log("context:",n);const{baseData:c,paymentOrderId:p}=n;try{if(!p)return console.error("Falta el paymentOrderId para la inscripci\xF3n a la clase p\xFAblica."),e&&e.notify({type:"negative",message:"Error interno: Falta el ID de la orden de pago."}),{success:!1};const s={payment_order_id:p,payment_method:u.payment_method,payment_status:u.status,transaction_id:u.id,is_full_payment:!0},t=await f.post("/payments/process-stripe-payment",s);if(!t.data||!t.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(a=>setTimeout(a,500));const d=await f.post(`/lessons/public-booking/${c.id}`);if(d.data&&d.data.message==="Inscripci\xF3n exitosa.")return console.log("Inscripci\xF3n a clase p\xFAblica exitosa:",d.data),e&&e.notify({type:"positive",message:"Te has inscrito a la clase con \xE9xito."}),{success:!0};{console.error("Error al inscribirse a la clase p\xFAblica:",d);const a=((i=d.data)==null?void 0:i.detail)||((l=d.data)==null?void 0:l.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:a}),{success:!1}}}catch(s){console.error("Error en finalizePublicLessonBooking:",s);const t=((g=(m=s.response)==null?void 0:m.data)==null?void 0:g.detail)||s.message||"Error al inscribirse a la clase.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},k=async(u,n,f,e)=>{var g,s,t,d;console.log("Finalizando uni\xF3n a partido abierto..."),console.log("context:",n);const{paymentOrderId:c,extraData:p}=n,{matchId:i,slotIndex:l,teamToJoin:m}=p||{};try{if(!c||!p||i===void 0||l===void 0||m===void 0)return console.error("Faltan datos para la uni\xF3n al partido abierto."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para unirse al partido."}),{success:!1};const a={payment_order_id:c,payment_method:u.payment_method,payment_status:u.status,transaction_id:u.id,is_full_payment:!0},o=await f.post("/payments/process-stripe-payment",a);if(!o.data||!o.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(_=>setTimeout(_,500));const y={match_id:i,slot_index:l,team_to_join:m},r=await f.post("/matches/join",y);if(r.data&&r.data.message==="Te has unido al partido exitosamente.")return console.log("Uni\xF3n a partido abierto exitosa:",r.data),e&&e.notify({type:"positive",message:"Te has unido al partido con \xE9xito."}),{success:!0,matchId:i};{console.error("Error al unirse al partido abierto:",r);const _=((g=r.data)==null?void 0:g.detail)||((s=r.data)==null?void 0:s.message)||"No se pudo completar la uni\xF3n al partido.";return e&&e.notify({type:"negative",message:_}),{success:!1}}}catch(a){console.error("Error en finalizeMatchJoin:",a);const o=((d=(t=a.response)==null?void 0:t.data)==null?void 0:d.detail)||a.message||"Error al unirse al partido.";return e&&e.notify({type:"negative",message:o}),{success:!1}}},O=async(u,n,f,e)=>{var g,s,t,d;console.log("Finalizando inscripci\xF3n a torneo..."),console.log("context:",n);const{paymentOrderId:c,baseData:p,extraData:i}=n,{id:l}=p||{},{partnerId:m}=i||{};try{if(!c||!l||!m)return console.error("Faltan datos para la inscripci\xF3n al torneo."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para inscribirse al torneo."}),{success:!1};const a={payment_order_id:c,payment_method:u.payment_method,payment_status:u.status,transaction_id:u.id,is_full_payment:!0},o=await f.post("/payments/process-stripe-payment",a);if(!o.data||!o.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(v=>setTimeout(v,500));const y={tournament_id:l,partner_id:m},r=await f.post("/tournaments/register-team",y),_=i&&i.isRetas,h=_?"Te registraste exitosamente en las retas.":"Equipo registrado exitosamente.",w=_?"Te has inscrito a las retas con \xE9xito.":"Te has inscrito al torneo con \xE9xito.";if(r.data&&(r.data.message===h||r.data.message.includes("exitosamente")))return console.log("Inscripci\xF3n exitosa:",r.data),e&&e.notify({type:"positive",message:w}),{success:!0};{console.error("Error al inscribirse:",r);const v=((g=r.data)==null?void 0:g.detail)||((s=r.data)==null?void 0:s.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:v}),{success:!1}}}catch(a){console.error("Error en finalizeTournamentEnrollment:",a);const o=((d=(t=a.response)==null?void 0:t.data)==null?void 0:d.detail)||a.message||"Error al inscribirse al torneo.";return e&&e.notify({type:"negative",message:o}),{success:!1}}},R=async(u,n,f,e)=>{var g,s,t,d;console.log("Finalizando inscripci\xF3n a torneo con MercadoPago..."),console.log("context:",n);const{paymentOrderId:c,baseData:p,extraData:i}=n,{id:l}=p||{},{partnerId:m}=i||{};try{if(!c||!l)return console.error("Faltan datos para la inscripci\xF3n al torneo."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para inscribirse al torneo."}),{success:!1};await new Promise(h=>setTimeout(h,1e3));const a={tournament_id:l,partner_id:m},o=await f.post("/tournaments/register-team",a),y=i&&i.isRetas,r=y?"Te registraste exitosamente en las retas.":"Equipo registrado exitosamente.",_=y?"Te has inscrito a las retas con \xE9xito.":"Te has inscrito al torneo con \xE9xito.";if(o.data&&(o.data.message===r||o.data.message.includes("exitosamente")))return console.log("Inscripci\xF3n exitosa:",o.data),e&&e.notify({type:"positive",message:_}),{success:!0};{console.error("Error al inscribirse:",o);const h=((g=o.data)==null?void 0:g.detail)||((s=o.data)==null?void 0:s.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:h}),{success:!1}}}catch(a){console.error("Error en finalizeMercadoPagoTournamentEnrollment:",a);const o=((d=(t=a.response)==null?void 0:t.data)==null?void 0:d.detail)||a.message||"Error al inscribirse al torneo.";return e&&e.notify({type:"negative",message:o}),{success:!1}}},N=async(u,n,f,e)=>{var i,l,m,g;console.log("Finalizando inscripci\xF3n a clase p\xFAblica con MercadoPago..."),console.log("context:",n);const{baseData:c,paymentOrderId:p}=n;try{if(!p)return console.error("Falta el paymentOrderId para la inscripci\xF3n a la clase p\xFAblica."),e&&e.notify({type:"negative",message:"Error interno: Falta el ID de la orden de pago."}),{success:!1};await new Promise(t=>setTimeout(t,1e3));const s=await f.post(`/lessons/public-booking/${c.id}`);if(s.data&&s.data.message==="Inscripci\xF3n exitosa.")return console.log("Inscripci\xF3n a clase p\xFAblica exitosa:",s.data),e&&e.notify({type:"positive",message:"Te has inscrito a la clase con \xE9xito."}),{success:!0};{console.error("Error al inscribirse a la clase p\xFAblica:",s);const t=((i=s.data)==null?void 0:i.detail)||((l=s.data)==null?void 0:l.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:t}),{success:!1}}}catch(s){console.error("Error en finalizeMercadoPagoPublicLessonBooking:",s);const t=((g=(m=s.response)==null?void 0:m.data)==null?void 0:g.detail)||s.message||"Error al inscribirse a la clase.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},B=async(u,n,f,e)=>{var g,s,t,d;console.log("Finalizando uni\xF3n a partido abierto con MercadoPago..."),console.log("context:",n),console.log("paymentResult:",u);const{paymentOrderId:c,extraData:p}=n,{matchId:i,slotIndex:l,teamToJoin:m}=p||{};console.log("Extracted values:"),console.log("  paymentOrderId:",c),console.log("  extraData:",p),console.log("  matchId:",i),console.log("  slotIndex:",l),console.log("  teamToJoin:",m);try{if(!c||!p||i===void 0||l===void 0||m===void 0)return console.error("Faltan datos para la uni\xF3n al partido abierto."),console.error("Validation details:"),console.error("  paymentOrderId exists:",!!c),console.error("  extraData exists:",!!p),console.error("  matchId defined:",i!==void 0),console.error("  slotIndex defined:",l!==void 0),console.error("  teamToJoin defined:",m!==void 0),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para unirse al partido."}),{success:!1};await new Promise(y=>setTimeout(y,1e3));const a={match_id:i,slot_index:l,team_to_join:m},o=await f.post("/matches/join",a);if(o.data&&o.data.message==="Te has unido al partido exitosamente.")return console.log("Uni\xF3n a partido abierto exitosa:",o.data),e&&e.notify({type:"positive",message:"Te has unido al partido con \xE9xito."}),{success:!0,matchId:i};{console.error("Error al unirse al partido abierto:",o);const y=((g=o.data)==null?void 0:g.detail)||((s=o.data)==null?void 0:s.message)||"No se pudo completar la uni\xF3n al partido.";return e&&e.notify({type:"negative",message:y}),{success:!1}}}catch(a){console.error("Error en finalizeMercadoPagoMatchJoin:",a);const o=((d=(t=a.response)==null?void 0:t.data)==null?void 0:d.detail)||a.message||"Error al unirse al partido.";return e&&e.notify({type:"negative",message:o}),{success:!1}}},J=async(u,n,f,e)=>{var t,d,a,o,y;console.log("Finalizando reserva de cancha con MercadoPago..."),console.log("context:",n);const{baseData:c,extraData:p,selectedProducts:i,paymentOrderId:l,totalAmount:m,amountToPay:g,itemDetails:s}=n;try{if(!c||!p||!l)return console.error("Faltan datos base/extra/paymentOrder para finalizar reserva con MercadoPago",n),e&&e.notify({type:"negative",message:"Error interno al finalizar la reserva (datos faltantes)."}),{success:!1};console.log("Waiting for backend payment status update..."),await new Promise(P=>setTimeout(P,3e3)),console.log("About to create reservation with payment_order_id:",l);const r=(i||[]).map(P=>({name:P.product.name,price:P.product.price,quantity:P.quantity})),_=p.date,h=p.time,w=p.duration;if(!_||!h)throw new Error("Falta la fecha o la hora de inicio en los datos extra/base.");const v=M(h,w),b=p.paymentOption==="total",x={club_id:c.clubId,court_id:c.id,reservation_date:_,start_time:h,end_time:v,total_price:m,pay_total:b,club_commission:0,player_commission:0,additional_items:r,payment_order_id:l,is_public_match:p.isPublicMatch||!1};console.log("Payload final para POST /reservations (MercadoPago):",x);const E=await f.post("/reservations",x),D=(t=E.data)==null?void 0:t.match_id;if(!D)throw console.warn("API /reservations no devolvi\xF3 un match_id:",E.data),new Error("No se pudo confirmar la creaci\xF3n del partido asociado.");return console.log("Reserva de cancha confirmada en backend con MercadoPago. Match ID:",D),{success:!0,matchId:D}}catch(r){console.error("Error en finalizeMercadoPagoCourtReservation:",r);const _=((a=(d=r.response)==null?void 0:d.data)==null?void 0:a.detail)||((y=(o=r.response)==null?void 0:o.data)==null?void 0:y.message)||r.message||"Error al confirmar la reserva en nuestro sistema.";return e&&e.notify({type:"negative",message:`El pago se realiz\xF3, pero hubo un problema al guardar tu reserva: ${_}`}),{success:!1}}};export{F as a,O as b,k as c,J as d,z as e,I as f,N as g,B as h,R as i};
