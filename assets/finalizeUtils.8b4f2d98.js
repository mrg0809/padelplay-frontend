import{e as T}from"./hourUtils.24f4f451.js";const I=async(g,r,f,e)=>{var t,p;console.log("Finalizando reserva de clase privada..."),console.log("context:",r);const{baseData:d,extraData:m,selectedProducts:n,paymentOrderId:c,amountToPay:u,paymentOption:y}=r,{itemDetails:o}=r;try{const s={payment_order_id:c,payment_method:g.payment_method,payment_status:g.status,transaction_id:g.id,is_full_payment:y==="total"},i=await f.post("/payments/process-stripe-payment",s);if(!i.data||!i.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(v=>setTimeout(v,500));let _=null,a=null,l=60;const w=o.find(v=>v.label==="Fecha");w&&(_=w.value);const h=o.find(v=>v.label==="Horario");h&&(a=h.value.split(" ")[0]);const E=o.find(v=>v.label==="Duraci\xF3n");if(E){const v=E.value.match(/\d+/);v&&(l=parseInt(v[0],10))}if(!_||!a)throw new Error("Falta la fecha o la hora de la clase.");const b={club_id:d.clubId,coach_id:d.id,lesson_date:_,lesson_time:a,duration:l,price_paid:u,participants:d.participants,payment_order_id:c,payment_intent_id:g.id,additional_items:n,pay_total:y==="total"};console.log("Payload para /lessons/private-booking:",b);const x=await f.post("/lessons/private-booking",b);if(x.data&&x.data.booking_id)return console.log("Reserva de clase privada creada:",x.data),{success:!0,path:`/player/privatelesson/${x.data.booking_id}`};throw console.error("Error: No se recibi\xF3 booking_id en la respuesta:",x),new Error("No se pudo confirmar la reserva de la clase privada.")}catch(s){return console.error("Error en finalizeClassBooking:",s),e.notify({type:"negative",message:((p=(t=s.response)==null?void 0:t.data)==null?void 0:p.detail)||s.message||"Error al confirmar la reserva de clase."}),{success:!1}}},z=async(g,r,f,e)=>{var t,p;console.log("Finalizando reserva de clase privada con MercadoPago..."),console.log("context:",r);const{baseData:d,extraData:m,selectedProducts:n,paymentOrderId:c,amountToPay:u,paymentOption:y}=r,{itemDetails:o}=r;try{await new Promise(b=>setTimeout(b,1e3));let s=null,i=null,_=60;const a=o.find(b=>b.label==="Fecha");a&&(s=a.value);const l=o.find(b=>b.label==="Horario");l&&(i=l.value.split(" ")[0]);const w=o.find(b=>b.label==="Duraci\xF3n");if(w){const b=w.value.match(/\d+/);b&&(_=parseInt(b[0],10))}if(!s||!i)throw new Error("Falta la fecha o la hora de la clase.");const h={club_id:d.clubId,coach_id:d.id,lesson_date:s,lesson_time:i,duration:_,price_paid:u,participants:d.participants,payment_order_id:c,payment_intent_id:g.payment_id,additional_items:n,pay_total:y==="total"};console.log("Payload para /lessons/private-booking:",h);const E=await f.post("/lessons/private-booking",h);if(E.data&&E.data.booking_id)return console.log("Reserva de clase privada creada:",E.data),{success:!0,path:`/player/privatelesson/${E.data.booking_id}`};throw console.error("Error: No se recibi\xF3 booking_id en la respuesta:",E),new Error("No se pudo confirmar la reserva de la clase privada.")}catch(s){return console.error("Error en finalizeMercadoPagoClassBooking:",s),e.notify({type:"negative",message:((p=(t=s.response)==null?void 0:t.data)==null?void 0:p.detail)||s.message||"Error al confirmar la reserva de clase."}),{success:!1}}},F=async(g,r,f,e)=>{var n,c,u,y;console.log("Finalizando inscripci\xF3n a clase p\xFAblica..."),console.log("context:",r);const{baseData:d,paymentOrderId:m}=r;try{if(!m)return console.error("Falta el paymentOrderId para la inscripci\xF3n a la clase p\xFAblica."),e&&e.notify({type:"negative",message:"Error interno: Falta el ID de la orden de pago."}),{success:!1};const o={payment_order_id:m,payment_method:g.payment_method,payment_status:g.status,transaction_id:g.id,is_full_payment:!0},t=await f.post("/payments/process-stripe-payment",o);if(!t.data||!t.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(s=>setTimeout(s,500));const p=await f.post(`/lessons/public-booking/${d.id}`);if(p.data&&p.data.message==="Inscripci\xF3n exitosa.")return console.log("Inscripci\xF3n a clase p\xFAblica exitosa:",p.data),e&&e.notify({type:"positive",message:"Te has inscrito a la clase con \xE9xito."}),{success:!0};{console.error("Error al inscribirse a la clase p\xFAblica:",p);const s=((n=p.data)==null?void 0:n.detail)||((c=p.data)==null?void 0:c.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:s}),{success:!1}}}catch(o){console.error("Error en finalizePublicLessonBooking:",o);const t=((y=(u=o.response)==null?void 0:u.data)==null?void 0:y.detail)||o.message||"Error al inscribirse a la clase.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},k=async(g,r,f,e)=>{var y,o,t,p;console.log("Finalizando uni\xF3n a partido abierto..."),console.log("context:",r);const{paymentOrderId:d,extraData:m}=r,{matchId:n,slotIndex:c,teamToJoin:u}=m||{};try{if(!d||!m||n===void 0||c===void 0||u===void 0)return console.error("Faltan datos para la uni\xF3n al partido abierto."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para unirse al partido."}),{success:!1};const s={payment_order_id:d,payment_method:g.payment_method,payment_status:g.status,transaction_id:g.id,is_full_payment:!0},i=await f.post("/payments/process-stripe-payment",s);if(!i.data||!i.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(l=>setTimeout(l,500));const _={match_id:n,slot_index:c,team_to_join:u},a=await f.post("/matches/join",_);if(a.data&&a.data.message==="Te has unido al partido exitosamente.")return console.log("Uni\xF3n a partido abierto exitosa:",a.data),e&&e.notify({type:"positive",message:"Te has unido al partido con \xE9xito."}),{success:!0,matchId:n};{console.error("Error al unirse al partido abierto:",a);const l=((y=a.data)==null?void 0:y.detail)||((o=a.data)==null?void 0:o.message)||"No se pudo completar la uni\xF3n al partido.";return e&&e.notify({type:"negative",message:l}),{success:!1}}}catch(s){console.error("Error en finalizeMatchJoin:",s);const i=((p=(t=s.response)==null?void 0:t.data)==null?void 0:p.detail)||s.message||"Error al unirse al partido.";return e&&e.notify({type:"negative",message:i}),{success:!1}}},R=async(g,r,f,e)=>{var y,o,t,p,s,i,_;console.log("Finalizando inscripci\xF3n a torneo..."),console.log("context:",r);const{paymentOrderId:d,baseData:m,extraData:n}=r,{id:c}=m||{},{partnerId:u}=n||{};try{if(!d||!c||!u)return console.error("Faltan datos para la inscripci\xF3n al torneo."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para inscribirse al torneo."}),{success:!1};const a={payment_order_id:d,payment_method:g.payment_method,payment_status:g.status,transaction_id:g.id,is_full_payment:!0},l=await f.post("/payments/process-stripe-payment",a);if(!l.data||!l.data.message)throw new Error("Error al actualizar el estado del pago.");await new Promise(v=>setTimeout(v,500));const w={tournament_id:c,partner_id:u},h=await f.post("/tournaments/register-team",w),E=n&&n.isRetas,b=E?"Te registraste exitosamente en las retas.":"Equipo registrado exitosamente.",x=E?"Te has inscrito a las retas con \xE9xito.":"Te has inscrito al torneo con \xE9xito.";if(h.data&&(h.data.message===b||h.data.message.includes("exitosamente")))return console.log("Inscripci\xF3n exitosa:",h.data),e&&e.notify({type:"positive",message:x}),{success:!0};{console.error("Error al inscribirse:",h);const v=((y=h.data)==null?void 0:y.detail)||((o=h.data)==null?void 0:o.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:v}),{success:!1}}}catch(a){console.error("Error en finalizeTournamentEnrollment:",a),console.error("Error details:",{status:(t=a.response)==null?void 0:t.status,statusText:(p=a.response)==null?void 0:p.statusText,data:(s=a.response)==null?void 0:s.data,message:a.message,stack:a.stack}),console.log("API Base URL:",f.defaults.baseURL);const l=((_=(i=a.response)==null?void 0:i.data)==null?void 0:_.detail)||a.message||"Error al inscribirse al torneo.";return e&&e.notify({type:"negative",message:l}),{success:!1}}},O=async(g,r,f,e)=>{var y,o,t,p,s,i,_;console.log("Finalizando inscripci\xF3n a torneo con MercadoPago..."),console.log("context:",r);const{paymentOrderId:d,baseData:m,extraData:n}=r,{id:c}=m||{},{partnerId:u}=n||{};try{if(!d||!c)return console.error("Faltan datos para la inscripci\xF3n al torneo."),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para inscribirse al torneo."}),{success:!1};await new Promise(b=>setTimeout(b,1e3));const a={tournament_id:c,partner_id:u},l=await f.post("/tournaments/register-team",a),w=n&&n.isRetas,h=w?"Te registraste exitosamente en las retas.":"Equipo registrado exitosamente.",E=w?"Te has inscrito a las retas con \xE9xito.":"Te has inscrito al torneo con \xE9xito.";if(l.data&&(l.data.message===h||l.data.message.includes("exitosamente")))return console.log("Inscripci\xF3n exitosa:",l.data),e&&e.notify({type:"positive",message:E}),{success:!0};{console.error("Error al inscribirse:",l);const b=((y=l.data)==null?void 0:y.detail)||((o=l.data)==null?void 0:o.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:b}),{success:!1}}}catch(a){console.error("Error en finalizeMercadoPagoTournamentEnrollment:",a),console.error("Error details:",{status:(t=a.response)==null?void 0:t.status,statusText:(p=a.response)==null?void 0:p.statusText,data:(s=a.response)==null?void 0:s.data,message:a.message,stack:a.stack}),console.log("API Base URL:",f.defaults.baseURL);const l=((_=(i=a.response)==null?void 0:i.data)==null?void 0:_.detail)||a.message||"Error al inscribirse al torneo.";return e&&e.notify({type:"negative",message:l}),{success:!1}}},N=async(g,r,f,e)=>{var n,c,u,y;console.log("Finalizando inscripci\xF3n a clase p\xFAblica con MercadoPago..."),console.log("context:",r);const{baseData:d,paymentOrderId:m}=r;try{if(!m)return console.error("Falta el paymentOrderId para la inscripci\xF3n a la clase p\xFAblica."),e&&e.notify({type:"negative",message:"Error interno: Falta el ID de la orden de pago."}),{success:!1};await new Promise(t=>setTimeout(t,1e3));const o=await f.post(`/lessons/public-booking/${d.id}`);if(o.data&&o.data.message==="Inscripci\xF3n exitosa.")return console.log("Inscripci\xF3n a clase p\xFAblica exitosa:",o.data),e&&e.notify({type:"positive",message:"Te has inscrito a la clase con \xE9xito."}),{success:!0};{console.error("Error al inscribirse a la clase p\xFAblica:",o);const t=((n=o.data)==null?void 0:n.detail)||((c=o.data)==null?void 0:c.message)||"No se pudo completar la inscripci\xF3n.";return e&&e.notify({type:"negative",message:t}),{success:!1}}}catch(o){console.error("Error en finalizeMercadoPagoPublicLessonBooking:",o);const t=((y=(u=o.response)==null?void 0:u.data)==null?void 0:y.detail)||o.message||"Error al inscribirse a la clase.";return e&&e.notify({type:"negative",message:t}),{success:!1}}},B=async(g,r,f,e)=>{var y,o,t,p;console.log("Finalizando uni\xF3n a partido abierto con MercadoPago..."),console.log("context:",r),console.log("paymentResult:",g);const{paymentOrderId:d,extraData:m}=r,{matchId:n,slotIndex:c,teamToJoin:u}=m||{};console.log("Extracted values:"),console.log("  paymentOrderId:",d),console.log("  extraData:",m),console.log("  matchId:",n),console.log("  slotIndex:",c),console.log("  teamToJoin:",u);try{if(!d||!m||n===void 0||c===void 0||u===void 0)return console.error("Faltan datos para la uni\xF3n al partido abierto."),console.error("Validation details:"),console.error("  paymentOrderId exists:",!!d),console.error("  extraData exists:",!!m),console.error("  matchId defined:",n!==void 0),console.error("  slotIndex defined:",c!==void 0),console.error("  teamToJoin defined:",u!==void 0),e&&e.notify({type:"negative",message:"Error interno: Faltan datos para unirse al partido."}),{success:!1};await new Promise(_=>setTimeout(_,1e3));const s={match_id:n,slot_index:c,team_to_join:u},i=await f.post("/matches/join",s);if(i.data&&i.data.message==="Te has unido al partido exitosamente.")return console.log("Uni\xF3n a partido abierto exitosa:",i.data),e&&e.notify({type:"positive",message:"Te has unido al partido con \xE9xito."}),{success:!0,matchId:n};{console.error("Error al unirse al partido abierto:",i);const _=((y=i.data)==null?void 0:y.detail)||((o=i.data)==null?void 0:o.message)||"No se pudo completar la uni\xF3n al partido.";return e&&e.notify({type:"negative",message:_}),{success:!1}}}catch(s){console.error("Error en finalizeMercadoPagoMatchJoin:",s);const i=((p=(t=s.response)==null?void 0:t.data)==null?void 0:p.detail)||s.message||"Error al unirse al partido.";return e&&e.notify({type:"negative",message:i}),{success:!1}}},J=async(g,r,f,e)=>{var t,p,s,i,_;console.log("Finalizando reserva de cancha con MercadoPago..."),console.log("context:",r);const{baseData:d,extraData:m,selectedProducts:n,paymentOrderId:c,totalAmount:u,amountToPay:y,itemDetails:o}=r;try{if(!d||!m||!c)return console.error("Faltan datos base/extra/paymentOrder para finalizar reserva con MercadoPago",r),e&&e.notify({type:"negative",message:"Error interno al finalizar la reserva (datos faltantes)."}),{success:!1};console.log("Waiting for backend payment status update..."),await new Promise(P=>setTimeout(P,3e3)),console.log("About to create reservation with payment_order_id:",c);const a=(n||[]).map(P=>({name:P.product.name,price:P.product.price,quantity:P.quantity})),l=m.date,w=m.time,h=m.duration;if(!l||!w)throw new Error("Falta la fecha o la hora de inicio en los datos extra/base.");const E=T(w,h),b=m.paymentOption==="total",x={club_id:d.clubId,court_id:d.id,reservation_date:l,start_time:w,end_time:E,total_price:u,pay_total:b,club_commission:0,player_commission:0,additional_items:a,payment_order_id:c,is_public_match:m.isPublicMatch||!1};console.log("Payload final para POST /reservations (MercadoPago):",x);const v=await f.post("/reservations/",x),D=(t=v.data)==null?void 0:t.match_id;if(!D)throw console.warn("API /reservations no devolvi\xF3 un match_id:",v.data),new Error("No se pudo confirmar la creaci\xF3n del partido asociado.");return console.log("Reserva de cancha confirmada en backend con MercadoPago. Match ID:",D),{success:!0,matchId:D}}catch(a){console.error("Error en finalizeMercadoPagoCourtReservation:",a);const l=((s=(p=a.response)==null?void 0:p.data)==null?void 0:s.detail)||((_=(i=a.response)==null?void 0:i.data)==null?void 0:_.message)||a.message||"Error al confirmar la reserva en nuestro sistema.";return e&&e.notify({type:"negative",message:`El pago se realiz\xF3, pero hubo un problema al guardar tu reserva: ${l}`}),{success:!1}}};export{F as a,R as b,k as c,J as d,z as e,I as f,N as g,B as h,O as i};
